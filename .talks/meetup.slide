ergo

that is how we build things

Rasmus Holm
CTO, Modular Finance
rasmus.holm@modularfinance.se
https://modularfinance.se
https://github.com/modfin/ergo



* Let us have a conversation.

* Who

** Modular Finance

- A FinTech, _buzz_ _buzz_, company
- Founded in 2013
- Go in production since 2016-ish
- Gone from a Java to a Go shop
- Located in Stockholm
- ~ 20 people
- Running 7 different products
- B2B

* Background

** From Hello World to production

- Working with Micro Services
- Working with Go
- Working with Docker
- Working with People


* Overview

.image resources/overview.svg _ 1300


* Wish list

** How do we want to build our products?

- Manage dependencies.
- Manage private dependencies.
- Docker, compose and k8s.
- Play nice with my IDE.
- Get environments things up and running.
- Have a clear structure (What goes where?)
- Simple git workflow.
- A clear mental picture and keeping things simple


* Our solution, the big things anyway

** Some iterations later

- Mono repo (ish)
- Use RO ssh keys for private deps
- Commit our deps, including our own
- Dev, Test and Prod is all docker in containers
- Some custom tooling
- docker compose
- kube


* Structure

    product
    ├─ db
    ├─ go
    │  ├─ pkg
    │  └─ src
    │     └─ product
    │        ├─ lib
    │        └─ srv0
    │           ├─ cmd
    │           │  └─ main.go
    │           ├─ internal
    │           │  ├─ config
    │           │  └─ dao
    │           ├─ Dockerfile
    │           ├─ Dockerfile.build
    │           ├─ go.mod
    │           └─ models.go
    ├─ k8s
    ├─ tools
    ├─ ui
    └─ docker-compose.yml


* Dockerfile

    FROM golang:1.11-alpine

    (...)

    RUN mkdir -p /go/src/product/srv0

    # mirror dev user
    ARG USER

    (...)

    USER $USER
    WORKDIR /go/src/product/srv0

    EXPOSE 8080
    ENV GO111MODULE=on

    CMD CompileDaemon -build="go build -o /tmp/srv0d /go/src/product/srv0/cmd/main.go" \
        -command="/tmp/srv0d" \
        -directory="/go/src/product/srv0"


* docker-compose.yml

    version: "3.0"
    services:
      traefik:
        image: traefik
        command: --web --docker --entryPoints='Name:http Address::80'
        ports:
          - "8080:80"
          - "8081:8080"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

      srv0:
        build:
          context: ./go/src/product/srv0
          dockerfile: Dockerfile
        volumes:
          - ./go/src/product:/go/src/product:delegated
          - ./go/pkg:/go/pkg:delegated
        labels:
          - "traefik.frontend.rule=PathPrefixStrip: /api/srv0"


* Thoughts, Questions or Comments?